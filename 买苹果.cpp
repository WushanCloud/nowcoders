
小易去附近的商店买苹果，奸诈的商贩使用了捆绑交易，只提供6个每袋和8个每袋的包装(包装不可拆分)。 可是小易现在只想购买恰好n个苹果，小易想购买尽量少的袋数方便携带。如果不能购买恰好n个苹果，小易将不会购买。

输入描述:
输入一个整数n，表示小易想购买n(1 ≤ n ≤ 100)个苹果


输出描述:
输出一个整数表示最少需要购买的袋数，如果不能买恰好n个苹果则输出-1
示例1
输入
20
输出
3

#include <iostream>
using namespace std;

int main()
{
    int n = 0;
    cin >> n;//苹果树
    int sum = 0;//总用袋子数
    int t1 = n / 8;
    if (n % 8 != 0)
        t1++;
    int t2 = n / 6;
    
    for (int i = t1; i >= 0; i--)//8
    {
        for (int j = 0; j <= t2; j++)//6
            if (n - i * 8 - j * 6 == 0)
            {
                cout << i+j;
                return 0;
            }
    }
    cout << -1;
    return 0;
}
