给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。

保证base和exponent不同时为0




class Solution {
public:
    
    double myPower(double base, int exponent) {
        if (exponent == 0)
            return 1;
        else
            return base * myPower(base, exponent-1);
    }
    double myPower2(double base, int exponent) {
        if (exponent == 0)
            return 1;
        else if (exponent == 1)
            return base;
        else if (exponent % 2 == 1)//奇数
            return base * myPower(base, exponent / 2);
        else 
            return myPower(base, exponent / 2);
    }
    double Power(double base, int exponent) {
        //法五：（二分法）
        //奇数和偶数
        int i = exponent > 0 ? 1 : 0;
        if(!i) exponent = -exponent;
        double ans = myPower(base, exponent);
        return i ? ans : 1/ans;
        /*
        //法四：（快速幂）
        int i = exponent > 0 ? 1 : 0;
        if(!i) exponent = -exponent;
        double ans = 1.0;
        while(exponent)
        {
            if(exponent & 1)
                ans *= base;
            base *= base;
            exponent >>= 1;
        }
        return i ? ans : 1/ans;
        */
        /*
        //法三：（递归）
        int i = exponent > 0 ? 1 : 0;
        if(!i) exponent = -exponent;
        double ans = myPower(base, exponent);
        return i ? ans : 1/ans;
        */
        /*
        //法二：（暴力）
        double ans = 1;
        //分正负
        int i = exponent > 0 ? 1 : 0;
        exponent = abs(exponent);
        while (exponent--)
        {
            ans *= base;
        }
        return i ? ans : 1/ans;
        */
        //法一：（库函数）
        //return pow(base,exponent);
    }
};
