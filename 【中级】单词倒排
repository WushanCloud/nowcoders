题目描述
对字符串中的所有单词进行倒排。

说明：

1、构成单词的字符只有26个大写或小写英文字母；

2、非构成单词的字符均视为单词间隔符；

3、要求倒排后的单词间隔符以一个空格表示；如果原字符串中相邻单词间有多个间隔符时，倒排转换后也只允许出现一个空格间隔符；

4、每个单词最长20个字母；

输入描述:
输入一行以空格来分隔的句子

输出描述:
输出句子的逆序

示例1
输入
复制
I am a student
输出
复制
student a am I

// write your code here cpp
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;

int main()
{
    string s1;
    while (getline(cin, s1))
    {
        string s2;
        int tmp = 0;
        for (size_t i = 0; i < s1.size(); i++)
        {
            if ((s1[i] >= 'a' && s1[i] <= 'z')||(s1[i] >= 'A' && s1[i] <= 'Z'))
            {
                s2 += s1[i];
                tmp = 0;
            }
            else if (tmp == 0)
            {
                s2 += ' ';
                tmp = 1;
            }
        }
        s1 = s2;
        while(s1.back() == ' ')
            s1.pop_back();
        reverse(s1.begin(), s1.end());
        while(s1.back() == ' ')
            s1.pop_back();
        s1 += ' ';
        size_t pos1 = 0, pos2 = 0;
        pos2 = s1.find(' ', pos2);
        while (pos2 < s1.size() && pos2 != string::npos)
        {
            reverse(s1.begin() + pos1, s1.begin() + pos2);
            pos2++;pos1 = pos2;
            pos2 = s1.find(' ',pos2);
        }
        while(s1.back() == ' ')
            s1.pop_back();
        cout << s1 << endl;
    }
    return 0;
}
